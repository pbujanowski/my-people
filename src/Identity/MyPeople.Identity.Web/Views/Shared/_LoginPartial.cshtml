@using Microsoft.AspNetCore.Identity
@using MyPeople.Identity.Domain.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @* <a class="nav-link text-dark" asp-controller="Account" asp-action="Manage" title="Manage">Hello @User.Identity?.Name!</a> *@
        <a class="nav-link text-dark" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-controller="Authorization" asp-action="Logout" asp-route-returnUrl="@ViewContext.HttpContext.Request.Query["ReturnUrl"]">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Register" asp-route-returnUrl="@ViewContext.HttpContext.Request.Query["ReturnUrl"]">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@ViewContext.HttpContext.Request.Query["ReturnUrl"]">Login</a>
    </li>
}
</ul>
